<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberTable">
    <resultMap id="selectMemberMap" type="memberDTO">
        <id column="idx" property="idx" />
        <result column="email" property="email" />
        <result column="password" property="password" />
        <result column="salt" property="salt" />
        <result column="refresh_token" property="refreshToken"/>
        <result column="grade" property="grade" />
        <result column="url" property="profileImageUrl" />
        <result column="personal_info_idx" property="personalInfoIdx"/>
    </resultMap>
    <resultMap id="selectMemberProfileMap" type="memberProfileDTO">
        <result column="real_name" property="name"/>
        <result column="profile_url" property="profileUrl"/>
        <result column="apply_count" property="applyCount"/>
        <result column="purchase_count" property="purchaseCount"/>
    </resultMap>
    <insert id="insertMemberByEmail" parameterType="memberDTO" useGeneratedKeys="true" keyProperty="idx" keyColumn="idx">
        INSERT INTO members_tb(email, password, salt, refresh_token, personal_info_idx)
        VALUES(#{email}, #{password}, #{salt}, #{refreshToken}, #{personalInfoIdx});
    </insert>
    <update id="updateRefreshToken" parameterType="memberDTO">
        UPDATE members_tb
        SET refresh_token = #{refreshToken}
        WHERE idx = #{idx};
    </update>
    <select id="searchMemberByEmail" resultMap="selectMemberMap">
        SELECT mtb.*, itb.url FROM members_tb mtb
        LEFT JOIN profile_images_tb itb ON mtb.profile_image_idx = itb.idx
        WHERE mtb.email = #{email};
    </select>
    <select id="validMemberByEmail" parameterType="memberDTO" resultMap="selectMemberMap">
        SELECT * FROM members_tb
        WHERE email = #{email} AND password = #{password};
    </select>
    <select id="selectOneProfile" resultMap="selectMemberProfileMap">
        SELECT pi.real_name, image_tb.url AS profile_url,

        (SELECT COUNT(*)
        FROM apply_sell_products_tb
        WHERE sale_status = 'FINISH' AND member_idx = #{memberIdx}) AS apply_count,

        (SELECT COUNT(*)
        FROM purchase_info_tb
        WHERE confirm_purchase = 1 AND member_idx = #{memberIdx}) AS purchase_count

        FROM members_tb AS m
        JOIN personal_information_tb AS pi ON pi.idx = m.personal_info_idx
        LEFT JOIN profile_images_tb AS image_tb ON image_tb.idx = m.profile_image_idx
        WHERE m.idx = #{memberIdx}

    </select>
</mapper>